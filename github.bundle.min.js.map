{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/axios/index.js","github.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/helpers/btoa.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/transformData.js","node_modules/axios/lib/utils.js","node_modules/base-64/base64.js","node_modules/es6-promise/dist/es6-promise.js","node_modules/process/browser.js","node_modules/utf8/utf8.js","src/github.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Github","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"./lib/axios",2,"utils","buildURL","parseHeaders","transformData","isURLSameOrigin","btoa","resolve","reject","config","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","XDomainRequest","url","auth","username","password","Authorization","open","method","toUpperCase","params","paramsSerializer","timeout","onload","responseHeaders","getAllResponseHeaders","responseData","indexOf","responseType","responseText","response","transformResponse","status","statusText","onerror","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","read","xsrfCookieName","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isArrayBuffer","DataView","send","./../helpers/btoa","./../helpers/buildURL","./../helpers/cookies","./../helpers/isURLSameOrigin","./../helpers/parseHeaders","./../helpers/transformData","./../utils",3,"Axios","defaultConfig","defaults","merge","interceptors","InterceptorManager","dispatchRequest","isAbsoluteURL","combineURLs","bind","prototype","arguments","baseURL","transformRequest","common","chain","promise","Promise","interceptor","unshift","fulfilled","rejected","push","then","shift","defaultInstance","axios","create","all","promises","spread","./core/InterceptorManager","./core/dispatchRequest","./defaults","./helpers/bind","./helpers/combineURLs","./helpers/isAbsoluteURL","./helpers/spread","./helpers/transformData","./utils",4,"handlers","use","eject","id","fn","h",5,"process","adapter","../adapters/http","../adapters/xhr","_process",6,"PROTECTION_PREFIX","DEFAULT_CONTENT_TYPE","Content-Type","isArrayBufferView","buffer","isObject","isFile","isBlob","isUndefined","JSON","stringify","replace","parse","Accept","patch","post","put",7,"thisArg","args","Array","apply",8,"InvalidCharacterError","message","input","block","charCode","str","String","output","idx","map","chars","charAt","charCodeAt","name",9,"encode","encodeURIComponent","serializedParams","parts","isArray","v","isDate","toISOString","join",10,"relativeURL",11,"write","value","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","isString","document","match","RegExp","decodeURIComponent","remove","now",12,"test",13,"resolveURL","href","msie","urlParsingNode","setAttribute","protocol","host","search","hash","hostname","port","pathname","originURL","navigator","userAgent","createElement","location","requestURL","parsed",14,"split","line","trim","substr",15,"callback","arr",16,"fns",17,"toString","result","ArrayBuffer","isView","obj","hasOwnProperty","assignValue","Object",18,"root","freeExports","freeModule","freeGlobal","error","TABLE","REGEX_SPACE_CHARACTERS","decode","bitStorage","bitCounter","position","fromCharCode","b","c","padding","base64","version","nodeType",19,"lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","createTextNode","observe","characterData","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","setTimeout","lib$es6$promise$asap$$len","lib$es6$promise$asap$$queue","arg","lib$es6$promise$asap$$attemptVertx","vertx","runOnLoop","runOnContext","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","constructor","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","parent","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","Constructor","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","lib$es6$promise$promise$resolve$$resolve","object","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","Function","P","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","_eachEntry","entry","_settledAt","_willSettleAt","state","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","race","_setScheduler","_setAsap","_asap","catch","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill",20,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","run","clearTimeout","Item","fun","array","noop","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask",21,"ucs2decode","string","extra","counter","ucs2encode","index","stringFromCharCode","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","utf8encode","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","utf8decode","tmp","utf8",22,"factory","Base64","Utf8","b64encode","options","API_URL","apiUrl","_request","cb","raw","getURL","param","getTime","token","_requestAllPages","results","iterate","err","res","xhr","links","getResponseHeader","next","link","exec","User","repos","type","sort","per_page","page","orgs","gists","notifications","participating","since","before","show","command","userRepos","userStarred","userGists","orgRepos","orgname","follow","unfollow","createRepo","Repository","updateTree","branch","currentTree","sha","that","getRef","repoPath","repo","user","fullname","ref","createRef","deleteRef","deleteRepo","listTags","listPulls","head","base","direction","getPull","number","compare","listBranches","heads","getBlob","getCommit","getSha","pathContent","getStatuses","getTree","tree","postBlob","content","encoding","baseTree","blob","base_tree","mode","postTree","commit","userData","author","email","parents","updateHead","contributors","retry","contents","encodeURI","fork","listForks","oldBranch","newBranch","createPullRequest","listHooks","getHook","createHook","editHook","deleteHook","move","newPath","latestCommit","rootTree","writeOptions","committer","getCommits","until","perpage","isStarred","owner","repository","star","unstar","Gist","gistPath","update","Issue","list","query","comment","issue","comments_url","body","Search","repositories","issues","users","getIssues","getRepo","getUser","getGist","getSearch","base-64","es6-promise"],"mappings":"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","file":"github.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = require('./lib/axios');","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Github = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require('./lib/axios');\n},{\"./lib/axios\":3}],2:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./../utils');\r\nvar buildURL = require('./../helpers/buildURL');\r\nvar parseHeaders = require('./../helpers/parseHeaders');\r\nvar transformData = require('./../helpers/transformData');\r\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\r\nvar btoa = window.btoa || require('./../helpers/btoa');\r\n\r\nmodule.exports = function xhrAdapter(resolve, reject, config) {\r\n  var requestData = config.data;\r\n  var requestHeaders = config.headers;\r\n\r\n  if (utils.isFormData(requestData)) {\r\n    delete requestHeaders['Content-Type']; // Let the browser set it\r\n  }\r\n\r\n  var request = new XMLHttpRequest();\r\n\r\n  // For IE 8/9 CORS support\r\n  // Only supports POST and GET calls and doesn't returns the response headers.\r\n  if (window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\r\n    request = new window.XDomainRequest();\r\n  }\r\n\r\n  // HTTP basic authentication\r\n  if (config.auth) {\r\n    var username = config.auth.username || '';\r\n    var password = config.auth.password || '';\r\n    requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n  }\r\n\r\n  request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\r\n\r\n  // Set the request timeout in MS\r\n  request.timeout = config.timeout;\r\n\r\n  // Listen for ready state\r\n  request.onload = function handleLoad() {\r\n    if (!request) {\r\n      return;\r\n    }\r\n    // Prepare the response\r\n    var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n    var responseData = ['text', ''].indexOf(config.responseType || '') !== -1 ? request.responseText : request.response;\r\n    var response = {\r\n      data: transformData(\r\n        responseData,\r\n        responseHeaders,\r\n        config.transformResponse\r\n      ),\r\n      // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\r\n      status: request.status === 1223 ? 204 : request.status,\r\n      statusText: request.status === 1223 ? 'No Content' : request.statusText,\r\n      headers: responseHeaders,\r\n      config: config,\r\n      request: request\r\n    };\r\n\r\n    // Resolve or reject the Promise based on the status\r\n    ((response.status >= 200 && response.status < 300) ||\r\n     (!('status' in request) && response.responseText) ?\r\n      resolve :\r\n      reject)(response);\r\n\r\n    // Clean up request\r\n    request = null;\r\n  };\r\n\r\n  // Handle low level network errors\r\n  request.onerror = function handleError() {\r\n    // Real errors are hidden from us by the browser\r\n    // onerror should only fire if it's a network error\r\n    reject(new Error('Network Error'));\r\n\r\n    // Clean up request\r\n    request = null;\r\n  };\r\n\r\n  // Add xsrf header\r\n  // This is only done if running in a standard browser environment.\r\n  // Specifically not if we're in a web worker, or react-native.\r\n  if (utils.isStandardBrowserEnv()) {\r\n    var cookies = require('./../helpers/cookies');\r\n\r\n    // Add xsrf header\r\n    var xsrfValue = config.withCredentials || isURLSameOrigin(config.url) ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n    if (xsrfValue) {\r\n      requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n    }\r\n  }\r\n\r\n  // Add headers to the request\r\n  if ('setRequestHeader' in request) {\r\n    utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n      if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n        // Remove Content-Type if data is undefined\r\n        delete requestHeaders[key];\r\n      } else {\r\n        // Otherwise add header to the request\r\n        request.setRequestHeader(key, val);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Add withCredentials to request if needed\r\n  if (config.withCredentials) {\r\n    request.withCredentials = true;\r\n  }\r\n\r\n  // Add responseType to request if needed\r\n  if (config.responseType) {\r\n    try {\r\n      request.responseType = config.responseType;\r\n    } catch (e) {\r\n      if (request.responseType !== 'json') {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (utils.isArrayBuffer(requestData)) {\r\n    requestData = new DataView(requestData);\r\n  }\r\n\r\n  // Send the request\r\n  request.send(requestData);\r\n};\r\n\n},{\"./../helpers/btoa\":8,\"./../helpers/buildURL\":9,\"./../helpers/cookies\":11,\"./../helpers/isURLSameOrigin\":13,\"./../helpers/parseHeaders\":14,\"./../helpers/transformData\":16,\"./../utils\":17}],3:[function(require,module,exports){\n'use strict';\r\n\r\nvar defaults = require('./defaults');\r\nvar utils = require('./utils');\r\nvar dispatchRequest = require('./core/dispatchRequest');\r\nvar InterceptorManager = require('./core/InterceptorManager');\r\nvar isAbsoluteURL = require('./helpers/isAbsoluteURL');\r\nvar combineURLs = require('./helpers/combineURLs');\r\nvar bind = require('./helpers/bind');\r\nvar transformData = require('./helpers/transformData');\r\n\r\nfunction Axios(defaultConfig) {\r\n  this.defaults = utils.merge({}, defaultConfig);\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = utils.merge({\r\n      url: arguments[0]\r\n    }, arguments[1]);\r\n  }\r\n\r\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\r\n\r\n  // Support baseURL config\r\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\r\n    config.url = combineURLs(config.baseURL, config.url);\r\n  }\r\n\r\n  // Don't allow overriding defaults.withCredentials\r\n  config.withCredentials = config.withCredentials || this.defaults.withCredentials;\r\n\r\n  // Transform request data\r\n  config.data = transformData(\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers || {}\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  // Hook up interceptors middleware\r\n  var chain = [dispatchRequest, undefined];\r\n  var promise = Promise.resolve(config);\r\n\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    chain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  while (chain.length) {\r\n    promise = promise.then(chain.shift(), chain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nvar defaultInstance = new Axios(defaults);\r\nvar axios = module.exports = bind(Axios.prototype.request, defaultInstance);\r\n\r\naxios.create = function create(defaultConfig) {\r\n  return new Axios(defaultConfig);\r\n};\r\n\r\n// Expose defaults\r\naxios.defaults = defaultInstance.defaults;\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = require('./helpers/spread');\r\n\r\n// Expose interceptors\r\naxios.interceptors = defaultInstance.interceptors;\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url\r\n    }));\r\n  };\r\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\r\n});\r\n\n},{\"./core/InterceptorManager\":4,\"./core/dispatchRequest\":5,\"./defaults\":6,\"./helpers/bind\":7,\"./helpers/combineURLs\":10,\"./helpers/isAbsoluteURL\":12,\"./helpers/spread\":15,\"./helpers/transformData\":16,\"./utils\":17}],4:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\n},{\"./../utils\":17}],5:[function(require,module,exports){\n(function (process){\n'use strict';\r\n\r\n/**\r\n * Dispatch a request to the server using whichever adapter\r\n * is supported by the current environment.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  return new Promise(function executor(resolve, reject) {\r\n    try {\r\n      var adapter;\r\n\r\n      if (typeof config.adapter === 'function') {\r\n        // For custom adapter support\r\n        adapter = config.adapter;\r\n      } else if (typeof XMLHttpRequest !== 'undefined') {\r\n        // For browsers use XHR adapter\r\n        adapter = require('../adapters/xhr');\r\n      } else if (typeof process !== 'undefined') {\r\n        // For node use HTTP adapter\r\n        adapter = require('../adapters/http');\r\n      }\r\n\r\n      if (typeof adapter === 'function') {\r\n        adapter(resolve, reject, config);\r\n      }\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n};\r\n\r\n\n}).call(this,require('_process'))\n\n},{\"../adapters/http\":2,\"../adapters/xhr\":2,\"_process\":20}],6:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./utils');\r\n\r\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nmodule.exports = {\r\n  transformRequest: [function transformResponseJSON(data, headers) {\r\n    if (utils.isFormData(data)) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBuffer(data)) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isObject(data) && !utils.isFile(data) && !utils.isBlob(data)) {\r\n      // Set application/json if no Content-Type has been specified\r\n      if (!utils.isUndefined(headers)) {\r\n        utils.forEach(headers, function processContentTypeHeader(val, key) {\r\n          if (key.toLowerCase() === 'content-type') {\r\n            headers['Content-Type'] = val;\r\n          }\r\n        });\r\n\r\n        if (utils.isUndefined(headers['Content-Type'])) {\r\n          headers['Content-Type'] = 'application/json;charset=utf-8';\r\n        }\r\n      }\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponseJSON(data) {\r\n    /*eslint no-param-reassign:0*/\r\n    if (typeof data === 'string') {\r\n      data = data.replace(PROTECTION_PREFIX, '');\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch (e) { /* Ignore */ }\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  headers: {\r\n    common: {\r\n      'Accept': 'application/json, text/plain, */*'\r\n    },\r\n    patch: utils.merge(DEFAULT_CONTENT_TYPE),\r\n    post: utils.merge(DEFAULT_CONTENT_TYPE),\r\n    put: utils.merge(DEFAULT_CONTENT_TYPE)\r\n  },\r\n\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN'\r\n};\r\n\n},{\"./utils\":17}],7:[function(require,module,exports){\n'use strict';\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\n},{}],8:[function(require,module,exports){\n'use strict';\r\n\r\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction InvalidCharacterError(message) {\r\n  this.message = message;\r\n}\r\nInvalidCharacterError.prototype = new Error;\r\nInvalidCharacterError.prototype.code = 5;\r\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\r\n\r\nfunction btoa(input) {\r\n  var str = String(input);\r\n  var output = '';\r\n  for (\r\n    // initialize result and counter\r\n    var block, charCode, idx = 0, map = chars;\r\n    // if the next str index does not exist:\r\n    //   change the mapping table to \"=\"\r\n    //   check if d has no fractional digits\r\n    str.charAt(idx | 0) || (map = '=', idx % 1);\r\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\r\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\r\n  ) {\r\n    charCode = str.charCodeAt(idx += 3 / 4);\r\n    if (charCode > 0xFF) {\r\n      throw new InvalidCharacterError('INVALID_CHARACTER_ERR: DOM Exception 5');\r\n    }\r\n    block = block << 8 | charCode;\r\n  }\r\n  return output;\r\n}\r\n\r\nmodule.exports = btoa;\r\n\n},{}],9:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%40/gi, '@').\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      }\r\n\r\n      if (!utils.isArray(val)) {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\n},{\"./../utils\":17}],10:[function(require,module,exports){\n'use strict';\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\r\n};\r\n\n},{}],11:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n  (function standardBrowserEnv() {\r\n    return {\r\n      write: function write(name, value, expires, path, domain, secure) {\r\n        var cookie = [];\r\n        cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n        if (utils.isNumber(expires)) {\r\n          cookie.push('expires=' + new Date(expires).toGMTString());\r\n        }\r\n\r\n        if (utils.isString(path)) {\r\n          cookie.push('path=' + path);\r\n        }\r\n\r\n        if (utils.isString(domain)) {\r\n          cookie.push('domain=' + domain);\r\n        }\r\n\r\n        if (secure === true) {\r\n          cookie.push('secure');\r\n        }\r\n\r\n        document.cookie = cookie.join('; ');\r\n      },\r\n\r\n      read: function read(name) {\r\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n        return (match ? decodeURIComponent(match[3]) : null);\r\n      },\r\n\r\n      remove: function remove(name) {\r\n        this.write(name, '', Date.now() - 86400000);\r\n      }\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return {\r\n      write: function write() {},\r\n      read: function read() { return null; },\r\n      remove: function remove() {}\r\n    };\r\n  })()\r\n);\r\n\n},{\"./../utils\":17}],12:[function(require,module,exports){\n'use strict';\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\n},{}],13:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n  (function standardBrowserEnv() {\r\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n    var urlParsingNode = document.createElement('a');\r\n    var originURL;\r\n\r\n    /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n    function resolveURL(url) {\r\n      var href = url;\r\n\r\n      if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n        urlParsingNode.setAttribute('href', href);\r\n        href = urlParsingNode.href;\r\n      }\r\n\r\n      urlParsingNode.setAttribute('href', href);\r\n\r\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n      return {\r\n        href: urlParsingNode.href,\r\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n        host: urlParsingNode.host,\r\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n        hostname: urlParsingNode.hostname,\r\n        port: urlParsingNode.port,\r\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n                  urlParsingNode.pathname :\r\n                  '/' + urlParsingNode.pathname\r\n      };\r\n    }\r\n\r\n    originURL = resolveURL(window.location.href);\r\n\r\n    /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n    return function isURLSameOrigin(requestURL) {\r\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n      return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return function isURLSameOrigin() {\r\n      return true;\r\n    };\r\n  })()\r\n);\r\n\n},{\"./../utils\":17}],14:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\n},{\"./../utils\":17}],15:[function(require,module,exports){\n'use strict';\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\n},{}],16:[function(require,module,exports){\n'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn(data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\n},{\"./../utils\":17}],17:[function(require,module,exports){\n'use strict';\r\n\r\n/*global toString:true*/\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return toString.call(val) === '[object FormData]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  typeof document.createElement -> undefined\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined' &&\r\n    typeof document.createElement === 'function'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object' && !isArray(obj)) {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = merge(result[key], val);\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  trim: trim\r\n};\r\n\n},{}],18:[function(require,module,exports){\n(function (global){\n/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],19:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.0.2\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":20}],20:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],21:[function(require,module,exports){\n(function (global){\n/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],22:[function(require,module,exports){\n/*!\r\n * @overview  Github.js\r\n *\r\n * @copyright (c) 2013 Michael Aufreiter, Development Seed\r\n *            Github.js is freely distributable.\r\n *\r\n * @license   Licensed under BSD-3-Clause-Clear\r\n *\r\n *            For all details and documentation:\r\n *            http://substance.io/michael/github\r\n */\r\n'use strict';\r\n\r\n(function (root, factory) {\r\n   /* istanbul ignore next */\r\n   if (typeof define === 'function' && define.amd) {\r\n      define(['es6-promise', 'base-64', 'utf8', 'axios'], function (Promise, Base64, Utf8, axios) {\r\n         return (root.Github = factory(Promise, Base64, Utf8, axios));\r\n      });\r\n   } else if (typeof module === 'object' && module.exports) {\r\n      module.exports = factory(require('es6-promise'), require('base-64'), require('utf8'), require('axios'));\r\n   } else {\r\n      root.Github = factory(root.Promise, root.base64, root.utf8, root.axios);\r\n   }\r\n}(this, function(Promise, Base64, Utf8, axios) {\r\n   function b64encode(string) {\r\n      return Base64.encode(Utf8.encode(string));\r\n   }\r\n\r\n   if (Promise.polyfill) {\r\n      Promise.polyfill();\r\n   }\r\n\r\n   // Initial Setup\r\n   // -------------\r\n\r\n   var Github = function (options) {\r\n      var API_URL = options.apiUrl || 'https://api.github.com';\r\n\r\n      // HTTP Request Abstraction\r\n      // =======\r\n      //\r\n      // I'm not proud of this and neither should you be if you were responsible for the XMLHttpRequest spec.\r\n\r\n      var _request = Github._request = function _request(method, path, data, cb, raw) {\r\n         function getURL() {\r\n            var url = path.indexOf('//') >= 0 ? path : API_URL + path;\r\n\r\n            url += ((/\\?/).test(url) ? '&' : '?');\r\n\r\n            if (data && typeof data === 'object' && ['GET', 'HEAD', 'DELETE'].indexOf(method) > -1) {\r\n               for (var param in data) {\r\n                  if (data.hasOwnProperty(param))\r\n                     url += '&' + encodeURIComponent(param) + '=' + encodeURIComponent(data[param]);\r\n               }\r\n            }\r\n\r\n            return url + (typeof window !== 'undefined' ? '&' + new Date().getTime() : '');\r\n         }\r\n\r\n         var config = {\r\n            headers: {\r\n               Accept: raw ? 'application/vnd.github.v3.raw+json' : 'application/vnd.github.v3+json',\r\n               'Content-Type': 'application/json;charset=UTF-8'\r\n            },\r\n            method: method,\r\n            data: data ? data : {},\r\n            url: getURL()\r\n         };\r\n\r\n         if ((options.token) || (options.username && options.password)) {\r\n            config.headers['Authorization'] = options.token ?\r\n            'token ' + options.token :\r\n            'Basic ' + b64encode(options.username + ':' + options.password);\r\n         }\r\n\r\n         return axios(config)\r\n            .then(function (response) {\r\n               cb(\r\n                  null,\r\n                  response.data || true,\r\n                  response.request\r\n               );\r\n            }, function (response) {\r\n               if (response.status === 304) {\r\n                  cb(\r\n                     null,\r\n                     response.data || true,\r\n                     response.request\r\n                  );\r\n               } else {\r\n                  cb({\r\n                     path: path,\r\n                     request: response.request,\r\n                     error: response.status\r\n                  });\r\n               }\r\n            });\r\n      };\r\n\r\n      var _requestAllPages = Github._requestAllPages = function _requestAllPages(path, cb) {\r\n         var results = [];\r\n\r\n         (function iterate() {\r\n            _request('GET', path, null, function (err, res, xhr) {\r\n               if (err) {\r\n                  return cb(err);\r\n               }\r\n\r\n               if (!(res instanceof Array)) {\r\n                  res = [res];\r\n               }\r\n\r\n               results.push.apply(results, res);\r\n\r\n               var links = (xhr.getResponseHeader('link') || '').split(/\\s*,\\s*/g);\r\n               var next = null;\r\n\r\n               links.forEach(function (link) {\r\n                  next = /rel=\"next\"/.test(link) ? link : next;\r\n               });\r\n\r\n               if (next) {\r\n                  next = (/<(.*)>/.exec(next) || [])[1];\r\n               }\r\n\r\n               if (!next) {\r\n                  cb(err, results);\r\n               } else {\r\n                  path = next;\r\n                  iterate();\r\n               }\r\n            });\r\n         })();\r\n      };\r\n\r\n      // User API\r\n      // =======\r\n\r\n      Github.User = function () {\r\n         this.repos = function (options, cb) {\r\n            if (arguments.length === 1 && typeof arguments[0] === 'function') {\r\n               cb = options;\r\n               options = {};\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var url = '/user/repos';\r\n            var params = [];\r\n\r\n            params.push('type=' + encodeURIComponent(options.type || 'all'));\r\n            params.push('sort=' + encodeURIComponent(options.sort || 'updated'));\r\n            params.push('per_page=' + encodeURIComponent(options.per_page || '100')); // jscs:ignore\r\n\r\n            if (options.page) {\r\n               params.push('page=' + encodeURIComponent(options.page));\r\n            }\r\n\r\n            url += '?' + params.join('&');\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // List user organizations\r\n         // -------\r\n\r\n         this.orgs = function (cb) {\r\n            _request('GET', '/user/orgs', null, cb);\r\n         };\r\n\r\n         // List authenticated user's gists\r\n         // -------\r\n\r\n         this.gists = function (cb) {\r\n            _request('GET', '/gists', null, cb);\r\n         };\r\n\r\n         // List authenticated user's unread notifications\r\n         // -------\r\n\r\n         this.notifications = function (options, cb) {\r\n            if (arguments.length === 1 && typeof arguments[0] === 'function') {\r\n               cb = options;\r\n               options = {};\r\n            }\r\n\r\n            options = options || {};\r\n            var url = '/notifications';\r\n            var params = [];\r\n\r\n            if (options.all) {\r\n               params.push('all=true');\r\n            }\r\n\r\n            if (options.participating) {\r\n               params.push('participating=true');\r\n            }\r\n\r\n            if (options.since) {\r\n               var since = options.since;\r\n\r\n               if (since.constructor === Date) {\r\n                  since = since.toISOString();\r\n               }\r\n\r\n               params.push('since=' + encodeURIComponent(since));\r\n            }\r\n\r\n            if (options.before) {\r\n               var before = options.before;\r\n\r\n               if (before.constructor === Date) {\r\n                  before = before.toISOString();\r\n               }\r\n\r\n               params.push('before=' + encodeURIComponent(before));\r\n            }\r\n\r\n            if (options.page) {\r\n               params.push('page=' + encodeURIComponent(options.page));\r\n            }\r\n\r\n            if (params.length > 0) {\r\n               url += '?' + params.join('&');\r\n            }\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // Show user information\r\n         // -------\r\n\r\n         this.show = function (username, cb) {\r\n            var command = username ? '/users/' + username : '/user';\r\n\r\n            _request('GET', command, null, cb);\r\n         };\r\n\r\n         // List user repositories\r\n         // -------\r\n\r\n         this.userRepos = function (username, cb) {\r\n            // Github does not always honor the 1000 limit so we want to iterate over the data set.\r\n            _requestAllPages('/users/' + username + '/repos?type=all&per_page=100&sort=updated', cb);\r\n         };\r\n\r\n         // List user starred repositories\r\n         // -------\r\n\r\n         this.userStarred = function (username, cb) {\r\n            // Github does not always honor the 1000 limit so we want to iterate over the data set.\r\n            _requestAllPages('/users/' + username + '/starred?type=all&per_page=100', cb);\r\n         };\r\n\r\n         // List a user's gists\r\n         // -------\r\n\r\n         this.userGists = function (username, cb) {\r\n            _request('GET', '/users/' + username + '/gists', null, cb);\r\n         };\r\n\r\n         // List organization repositories\r\n         // -------\r\n\r\n         this.orgRepos = function (orgname, cb) {\r\n            // Github does not always honor the 1000 limit so we want to iterate over the data set.\r\n            _requestAllPages('/orgs/' + orgname + '/repos?type=all&&page_num=1000&sort=updated&direction=desc', cb);\r\n         };\r\n\r\n         // Follow user\r\n         // -------\r\n\r\n         this.follow = function (username, cb) {\r\n            _request('PUT', '/user/following/' + username, null, cb);\r\n         };\r\n\r\n         // Unfollow user\r\n         // -------\r\n\r\n         this.unfollow = function (username, cb) {\r\n            _request('DELETE', '/user/following/' + username, null, cb);\r\n         };\r\n\r\n         // Create a repo\r\n         // -------\r\n         this.createRepo = function (options, cb) {\r\n            _request('POST', '/user/repos', options, cb);\r\n         };\r\n      };\r\n\r\n      // Repository API\r\n      // =======\r\n\r\n      Github.Repository = function (options) {\r\n         var repo = options.name;\r\n         var user = options.user;\r\n         var fullname = options.fullname;\r\n\r\n         var that = this;\r\n         var repoPath;\r\n\r\n         if (fullname) {\r\n            repoPath = '/repos/' + fullname;\r\n         } else {\r\n            repoPath = '/repos/' + user + '/' + repo;\r\n         }\r\n\r\n         var currentTree = {\r\n            branch: null,\r\n            sha: null\r\n         };\r\n\r\n         // Uses the cache if branch has not been changed\r\n         // -------\r\n\r\n         function updateTree(branch, cb) {\r\n            if (branch === currentTree.branch && currentTree.sha) {\r\n               return cb(null, currentTree.sha);\r\n            }\r\n\r\n            that.getRef('heads/' + branch, function (err, sha) {\r\n               currentTree.branch = branch;\r\n               currentTree.sha = sha;\r\n               cb(err, sha);\r\n            });\r\n         }\r\n\r\n         // Get a particular reference\r\n         // -------\r\n\r\n         this.getRef = function (ref, cb) {\r\n            _request('GET', repoPath + '/git/refs/' + ref, null, function (err, res, xhr) {\r\n               if (err) {\r\n                  return cb(err);\r\n               }\r\n\r\n               cb(null, res.object.sha, xhr);\r\n            });\r\n         };\r\n\r\n         // Create a new reference\r\n         // --------\r\n         //\r\n         // {\r\n         //   \"ref\": \"refs/heads/my-new-branch-name\",\r\n         //   \"sha\": \"827efc6d56897b048c772eb4087f854f46256132\"\r\n         // }\r\n\r\n         this.createRef = function (options, cb) {\r\n            _request('POST', repoPath + '/git/refs', options, cb);\r\n         };\r\n\r\n         // Delete a reference\r\n         // --------\r\n         //\r\n         // Repo.deleteRef('heads/gh-pages')\r\n         // repo.deleteRef('tags/v1.0')\r\n\r\n         this.deleteRef = function (ref, cb) {\r\n            _request('DELETE', repoPath + '/git/refs/' + ref, options, cb);\r\n         };\r\n\r\n         // Create a repo\r\n         // -------\r\n\r\n         this.createRepo = function (options, cb) {\r\n            _request('POST', '/user/repos', options, cb);\r\n         };\r\n\r\n         // Delete a repo\r\n         // --------\r\n\r\n         this.deleteRepo = function (cb) {\r\n            _request('DELETE', repoPath, options, cb);\r\n         };\r\n\r\n         // List all tags of a repository\r\n         // -------\r\n\r\n         this.listTags = function (cb) {\r\n            _request('GET', repoPath + '/tags', null, cb);\r\n         };\r\n\r\n         // List all pull requests of a respository\r\n         // -------\r\n\r\n         this.listPulls = function (options, cb) {\r\n            options = options || {};\r\n            var url = repoPath + '/pulls';\r\n            var params = [];\r\n\r\n            if (typeof options === 'string') {\r\n               // Backward compatibility\r\n               params.push('state=' + options);\r\n            } else {\r\n               if (options.state) {\r\n                  params.push('state=' + encodeURIComponent(options.state));\r\n               }\r\n\r\n               if (options.head) {\r\n                  params.push('head=' + encodeURIComponent(options.head));\r\n               }\r\n\r\n               if (options.base) {\r\n                  params.push('base=' + encodeURIComponent(options.base));\r\n               }\r\n\r\n               if (options.sort) {\r\n                  params.push('sort=' + encodeURIComponent(options.sort));\r\n               }\r\n\r\n               if (options.direction) {\r\n                  params.push('direction=' + encodeURIComponent(options.direction));\r\n               }\r\n\r\n               if (options.page) {\r\n                  params.push('page=' + options.page);\r\n               }\r\n\r\n               if (options.per_page) {\r\n                  params.push('per_page=' + options.per_page);\r\n               }\r\n            }\r\n\r\n            if (params.length > 0) {\r\n               url += '?' + params.join('&');\r\n            }\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // Gets details for a specific pull request\r\n         // -------\r\n\r\n         this.getPull = function (number, cb) {\r\n            _request('GET', repoPath + '/pulls/' + number, null, cb);\r\n         };\r\n\r\n         // Retrieve the changes made between base and head\r\n         // -------\r\n\r\n         this.compare = function (base, head, cb) {\r\n            _request('GET', repoPath + '/compare/' + base + '...' + head, null, cb);\r\n         };\r\n\r\n         // List all branches of a repository\r\n         // -------\r\n\r\n         this.listBranches = function (cb) {\r\n            _request('GET', repoPath + '/git/refs/heads', null, function (err, heads, xhr) {\r\n               if (err) return cb(err);\r\n               cb(null, heads.map(function (head) {\r\n                  return head.ref.replace(/^refs\\/heads\\//, '');\r\n               }), xhr);\r\n            });\r\n         };\r\n\r\n         // Retrieve the contents of a blob\r\n         // -------\r\n\r\n         this.getBlob = function (sha, cb) {\r\n            _request('GET', repoPath + '/git/blobs/' + sha, null, cb, 'raw');\r\n         };\r\n\r\n         // For a given file path, get the corresponding sha (blob for files, tree for dirs)\r\n         // -------\r\n\r\n         this.getCommit = function (branch, sha, cb) {\r\n            _request('GET', repoPath + '/git/commits/' + sha, null, cb);\r\n         };\r\n\r\n         // For a given file path, get the corresponding sha (blob for files, tree for dirs)\r\n         // -------\r\n\r\n         this.getSha = function (branch, path, cb) {\r\n            if (!path || path === '') return that.getRef('heads/' + branch, cb);\r\n            _request('GET', repoPath + '/contents/' + path + (branch ? '?ref=' + branch : ''),\r\n               null, function (err, pathContent, xhr) {\r\n                  if (err) return cb(err);\r\n                  cb(null, pathContent.sha, xhr);\r\n               });\r\n         };\r\n\r\n         // Get the statuses for a particular SHA\r\n         // -------\r\n\r\n         this.getStatuses = function (sha, cb) {\r\n            _request('GET', repoPath + '/statuses/' + sha, null, cb);\r\n         };\r\n\r\n         // Retrieve the tree a commit points to\r\n         // -------\r\n\r\n         this.getTree = function (tree, cb) {\r\n            _request('GET', repoPath + '/git/trees/' + tree, null, function (err, res, xhr) {\r\n               if (err) return cb(err);\r\n               cb(null, res.tree, xhr);\r\n            });\r\n         };\r\n\r\n         // Post a new blob object, getting a blob SHA back\r\n         // -------\r\n\r\n         this.postBlob = function (content, cb) {\r\n            if (typeof (content) === 'string') {\r\n               content = {\r\n                  content: content,\r\n                  encoding: 'utf-8'\r\n               };\r\n            } else {\r\n               content = {\r\n                  content: b64encode(content),\r\n                  encoding: 'base64'\r\n               };\r\n            }\r\n\r\n            _request('POST', repoPath + '/git/blobs', content, function (err, res) {\r\n               if (err) return cb(err);\r\n               cb(null, res.sha);\r\n            });\r\n         };\r\n\r\n         // Update an existing tree adding a new blob object getting a tree SHA back\r\n         // -------\r\n\r\n         this.updateTree = function (baseTree, path, blob, cb) {\r\n            var data = {\r\n               base_tree: baseTree,\r\n               tree: [\r\n                  {\r\n                     path: path,\r\n                     mode: '100644',\r\n                     type: 'blob',\r\n                     sha: blob\r\n                  }\r\n               ]\r\n            };\r\n\r\n            _request('POST', repoPath + '/git/trees', data, function (err, res) {\r\n               if (err) return cb(err);\r\n               cb(null, res.sha);\r\n            });\r\n         };\r\n\r\n         // Post a new tree object having a file path pointer replaced\r\n         // with a new blob SHA getting a tree SHA back\r\n         // -------\r\n\r\n         this.postTree = function (tree, cb) {\r\n            _request('POST', repoPath + '/git/trees', {\r\n               tree: tree\r\n            }, function (err, res) {\r\n               if (err) return cb(err);\r\n               cb(null, res.sha);\r\n            });\r\n         };\r\n\r\n         // Create a new commit object with the current commit SHA as the parent\r\n         // and the new tree SHA, getting a commit SHA back\r\n         // -------\r\n\r\n         this.commit = function (parent, tree, message, cb) {\r\n            var user = new Github.User();\r\n\r\n            user.show(null, function (err, userData) {\r\n               if (err) return cb(err);\r\n               var data = {\r\n                  message: message,\r\n                  author: {\r\n                     name: options.user,\r\n                     email: userData.email\r\n                  },\r\n                  parents: [\r\n                     parent\r\n                  ],\r\n                  tree: tree\r\n               };\r\n\r\n               _request('POST', repoPath + '/git/commits', data, function (err, res) {\r\n                  if (err) return cb(err);\r\n                  currentTree.sha = res.sha; // Update latest commit\r\n                  cb(null, res.sha);\r\n               });\r\n            });\r\n         };\r\n\r\n         // Update the reference of your head to point to the new commit SHA\r\n         // -------\r\n\r\n         this.updateHead = function (head, commit, cb) {\r\n            _request('PATCH', repoPath + '/git/refs/heads/' + head, {\r\n               sha: commit\r\n            }, cb);\r\n         };\r\n\r\n         // Show repository information\r\n         // -------\r\n\r\n         this.show = function (cb) {\r\n            _request('GET', repoPath, null, cb);\r\n         };\r\n\r\n         // Show repository contributors\r\n         // -------\r\n\r\n         this.contributors = function (cb, retry) {\r\n            retry = retry || 1000;\r\n            var that = this;\r\n\r\n            _request('GET', repoPath + '/stats/contributors', null, function (err, data, xhr) {\r\n               if (err) return cb(err);\r\n\r\n               if (xhr.status === 202) {\r\n                  setTimeout(\r\n                     function () {\r\n                        that.contributors(cb, retry);\r\n                     },\r\n                     retry\r\n                  );\r\n               } else {\r\n                  cb(err, data, xhr);\r\n               }\r\n            });\r\n         };\r\n\r\n         // Get contents\r\n         // --------\r\n\r\n         this.contents = function (ref, path, cb) {\r\n            path = encodeURI(path);\r\n            _request('GET', repoPath + '/contents' + (path ? '/' + path : ''), {\r\n               ref: ref\r\n            }, cb);\r\n         };\r\n\r\n         // Fork repository\r\n         // -------\r\n\r\n         this.fork = function (cb) {\r\n            _request('POST', repoPath + '/forks', null, cb);\r\n         };\r\n\r\n         // List forks\r\n         // --------\r\n\r\n         this.listForks = function (cb) {\r\n            _request('GET', repoPath + '/forks', null, cb);\r\n         };\r\n\r\n         // Branch repository\r\n         // --------\r\n\r\n         this.branch = function (oldBranch, newBranch, cb) {\r\n            if (arguments.length === 2 && typeof arguments[1] === 'function') {\r\n               cb = newBranch;\r\n               newBranch = oldBranch;\r\n               oldBranch = 'master';\r\n            }\r\n\r\n            this.getRef('heads/' + oldBranch, function (err, ref) {\r\n               if (err && cb) return cb(err);\r\n               that.createRef({\r\n                  ref: 'refs/heads/' + newBranch,\r\n                  sha: ref\r\n               }, cb);\r\n            });\r\n         };\r\n\r\n         // Create pull request\r\n         // --------\r\n\r\n         this.createPullRequest = function (options, cb) {\r\n            _request('POST', repoPath + '/pulls', options, cb);\r\n         };\r\n\r\n         // List hooks\r\n         // --------\r\n\r\n         this.listHooks = function (cb) {\r\n            _request('GET', repoPath + '/hooks', null, cb);\r\n         };\r\n\r\n         // Get a hook\r\n         // --------\r\n\r\n         this.getHook = function (id, cb) {\r\n            _request('GET', repoPath + '/hooks/' + id, null, cb);\r\n         };\r\n\r\n         // Create a hook\r\n         // --------\r\n\r\n         this.createHook = function (options, cb) {\r\n            _request('POST', repoPath + '/hooks', options, cb);\r\n         };\r\n\r\n         // Edit a hook\r\n         // --------\r\n\r\n         this.editHook = function (id, options, cb) {\r\n            _request('PATCH', repoPath + '/hooks/' + id, options, cb);\r\n         };\r\n\r\n         // Delete a hook\r\n         // --------\r\n\r\n         this.deleteHook = function (id, cb) {\r\n            _request('DELETE', repoPath + '/hooks/' + id, null, cb);\r\n         };\r\n\r\n         // Read file at given path\r\n         // -------\r\n\r\n         this.read = function (branch, path, cb) {\r\n            _request('GET', repoPath + '/contents/' + encodeURI(path) + (branch ? '?ref=' + branch : ''),\r\n               null, function (err, obj, xhr) {\r\n                  if (err && err.error === 404) return cb('not found', null, null);\r\n\r\n                  if (err) return cb(err);\r\n                  cb(null, obj, xhr);\r\n               }, true);\r\n         };\r\n\r\n         // Remove a file\r\n         // -------\r\n\r\n         this.remove = function (branch, path, cb) {\r\n            that.getSha(branch, path, function (err, sha) {\r\n               if (err) return cb(err);\r\n               _request('DELETE', repoPath + '/contents/' + path, {\r\n                  message: path + ' is removed',\r\n                  sha: sha,\r\n                  branch: branch\r\n               }, cb);\r\n            });\r\n         };\r\n\r\n         // Alias for repo.remove for backwards comapt.\r\n         // -------\r\n         this.delete = this.remove;\r\n\r\n         // Move a file to a new location\r\n         // -------\r\n\r\n         this.move = function (branch, path, newPath, cb) {\r\n            updateTree(branch, function (err, latestCommit) {\r\n               that.getTree(latestCommit + '?recursive=true', function (err, tree) {\r\n                  // Update Tree\r\n                  tree.forEach(function (ref) {\r\n                     if (ref.path === path) ref.path = newPath;\r\n\r\n                     if (ref.type === 'tree') delete ref.sha;\r\n                  });\r\n\r\n                  that.postTree(tree, function (err, rootTree) {\r\n                     that.commit(latestCommit, rootTree, 'Deleted ' + path, function (err, commit) {\r\n                        that.updateHead(branch, commit, cb);\r\n                     });\r\n                  });\r\n               });\r\n            });\r\n         };\r\n\r\n         // Write file contents to a given branch and path\r\n         // -------\r\n\r\n         this.write = function (branch, path, content, message, options, cb) {\r\n            if (typeof cb === 'undefined') {\r\n               cb = options;\r\n               options = {};\r\n            }\r\n\r\n            that.getSha(branch, encodeURI(path), function (err, sha) {\r\n               var writeOptions = {\r\n                  message: message,\r\n                  content: typeof options.encode === 'undefined' || options.encode ? b64encode(content) : content,\r\n                  branch: branch,\r\n                  committer: options && options.committer ? options.committer : undefined,\r\n                  author: options && options.author ? options.author : undefined\r\n               };\r\n\r\n               // If no error, we set the sha to overwrite an existing file\r\n               if (!(err && err.error !== 404)) writeOptions.sha = sha;\r\n               _request('PUT', repoPath + '/contents/' + encodeURI(path), writeOptions, cb);\r\n            });\r\n         };\r\n\r\n         // List commits on a repository. Takes an object of optional parameters:\r\n         // sha: SHA or branch to start listing commits from\r\n         // path: Only commits containing this file path will be returned\r\n         // author: Only commits by this author will be returned. Its value can be the GitHub login or the email address\r\n         // since: ISO 8601 date - only commits after this date will be returned\r\n         // until: ISO 8601 date - only commits before this date will be returned\r\n         // -------\r\n\r\n         this.getCommits = function (options, cb) {\r\n            options = options || {};\r\n            var url = repoPath + '/commits';\r\n            var params = [];\r\n\r\n            if (options.sha) {\r\n               params.push('sha=' + encodeURIComponent(options.sha));\r\n            }\r\n\r\n            if (options.path) {\r\n               params.push('path=' + encodeURIComponent(options.path));\r\n            }\r\n\r\n            if (options.author) {\r\n               params.push('author=' + encodeURIComponent(options.author));\r\n            }\r\n\r\n            if (options.since) {\r\n               var since = options.since;\r\n\r\n               if (since.constructor === Date) {\r\n                  since = since.toISOString();\r\n               }\r\n\r\n               params.push('since=' + encodeURIComponent(since));\r\n            }\r\n\r\n            if (options.until) {\r\n               var until = options.until;\r\n\r\n               if (until.constructor === Date) {\r\n                  until = until.toISOString();\r\n               }\r\n\r\n               params.push('until=' + encodeURIComponent(until));\r\n            }\r\n\r\n            if (options.page) {\r\n               params.push('page=' + options.page);\r\n            }\r\n\r\n            if (options.perpage) {\r\n               params.push('per_page=' + options.perpage);\r\n            }\r\n\r\n            if (params.length > 0) {\r\n               url += '?' + params.join('&');\r\n            }\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // Check if a repository is starred.\r\n         // --------\r\n\r\n         this.isStarred = function(owner, repository, cb) {\r\n            _request('GET', '/user/starred/' + owner + '/' + repository, null, cb);\r\n         };\r\n\r\n         // Star a repository.\r\n         // --------\r\n\r\n         this.star = function(owner, repository, cb) {\r\n            _request('PUT', '/user/starred/' + owner + '/' + repository, null, cb)\r\n         };\r\n\r\n         // Unstar a repository.\r\n         // --------\r\n\r\n         this.unstar = function(owner, repository, cb) {\r\n            _request('DELETE', '/user/starred/' + owner + '/' + repository, null, cb)\r\n         };\r\n      };\r\n\r\n      // Gists API\r\n      // =======\r\n\r\n      Github.Gist = function (options) {\r\n         var id = options.id;\r\n         var gistPath = '/gists/' + id;\r\n\r\n         // Read the gist\r\n         // --------\r\n\r\n         this.read = function (cb) {\r\n            _request('GET', gistPath, null, cb);\r\n         };\r\n\r\n         // Create the gist\r\n         // --------\r\n         // {\r\n         //  \"description\": \"the description for this gist\",\r\n         //    \"public\": true,\r\n         //    \"files\": {\r\n         //      \"file1.txt\": {\r\n         //        \"content\": \"String file contents\"\r\n         //      }\r\n         //    }\r\n         // }\r\n\r\n         this.create = function (options, cb) {\r\n            _request('POST', '/gists', options, cb);\r\n         };\r\n\r\n         // Delete the gist\r\n         // --------\r\n\r\n         this.delete = function (cb) {\r\n            _request('DELETE', gistPath, null, cb);\r\n         };\r\n\r\n         // Fork a gist\r\n         // --------\r\n\r\n         this.fork = function (cb) {\r\n            _request('POST', gistPath + '/fork', null, cb);\r\n         };\r\n\r\n         // Update a gist with the new stuff\r\n         // --------\r\n\r\n         this.update = function (options, cb) {\r\n            _request('PATCH', gistPath, options, cb);\r\n         };\r\n\r\n         // Star a gist\r\n         // --------\r\n\r\n         this.star = function (cb) {\r\n            _request('PUT', gistPath + '/star', null, cb);\r\n         };\r\n\r\n         // Untar a gist\r\n         // --------\r\n\r\n         this.unstar = function (cb) {\r\n            _request('DELETE', gistPath + '/star', null, cb);\r\n         };\r\n\r\n         // Check if a gist is starred\r\n         // --------\r\n\r\n         this.isStarred = function (cb) {\r\n            _request('GET', gistPath + '/star', null, cb);\r\n         };\r\n      };\r\n\r\n      // Issues API\r\n      // ==========\r\n\r\n      Github.Issue = function (options) {\r\n         var path = '/repos/' + options.user + '/' + options.repo + '/issues';\r\n\r\n         this.list = function (options, cb) {\r\n            var query = [];\r\n\r\n            for (var key in options) {\r\n               if (options.hasOwnProperty(key)) {\r\n                  query.push(encodeURIComponent(key) + '=' + encodeURIComponent(options[key]));\r\n               }\r\n            }\r\n\r\n            _requestAllPages(path + '?' + query.join('&'), cb);\r\n         };\r\n\r\n         this.comment = function (issue, comment, cb) {\r\n            _request('POST', issue.comments_url, {\r\n               body: comment\r\n            }, cb);\r\n         };\r\n      };\r\n\r\n      // Search API\r\n      // ==========\r\n\r\n      Github.Search = function (options) {\r\n         var path = '/search/';\r\n         var query = '?q=' + options.query;\r\n\r\n         this.repositories = function (options, cb) {\r\n            _request('GET', path + 'repositories' + query, options, cb);\r\n         };\r\n\r\n         this.code = function (options, cb) {\r\n            _request('GET', path + 'code' + query, options, cb);\r\n         };\r\n\r\n         this.issues = function (options, cb) {\r\n            _request('GET', path + 'issues' + query, options, cb);\r\n         };\r\n\r\n         this.users = function (options, cb) {\r\n            _request('GET', path + 'users' + query, options, cb);\r\n         };\r\n      };\r\n\r\n      return Github;\r\n   };\r\n\r\n// Top Level API\r\n// -------\r\n\r\n   Github.getIssues = function (user, repo) {\r\n      return new Github.Issue({\r\n         user: user,\r\n         repo: repo\r\n      });\r\n   };\r\n\r\n   Github.getRepo = function (user, repo) {\r\n      if (!repo) {\r\n         return new Github.Repository({\r\n            fullname: user\r\n         });\r\n      } else {\r\n         return new Github.Repository({\r\n            user: user,\r\n            name: repo\r\n         });\r\n      }\r\n   };\r\n\r\n   Github.getUser = function () {\r\n      return new Github.User();\r\n   };\r\n\r\n   Github.getGist = function (id) {\r\n      return new Github.Gist({\r\n         id: id\r\n      });\r\n   };\r\n\r\n   Github.getSearch = function (query) {\r\n      return new Github.Search({\r\n         query: query\r\n      });\r\n   };\r\n\r\n   return Github;\r\n}));\n},{\"axios\":1,\"base-64\":18,\"es6-promise\":19,\"utf8\":21}]},{},[22])(22)\n});\n\n","'use strict';\r\n\r\nvar utils = require('./../utils');\r\nvar buildURL = require('./../helpers/buildURL');\r\nvar parseHeaders = require('./../helpers/parseHeaders');\r\nvar transformData = require('./../helpers/transformData');\r\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\r\nvar btoa = window.btoa || require('./../helpers/btoa');\r\n\r\nmodule.exports = function xhrAdapter(resolve, reject, config) {\r\n  var requestData = config.data;\r\n  var requestHeaders = config.headers;\r\n\r\n  if (utils.isFormData(requestData)) {\r\n    delete requestHeaders['Content-Type']; // Let the browser set it\r\n  }\r\n\r\n  var request = new XMLHttpRequest();\r\n\r\n  // For IE 8/9 CORS support\r\n  // Only supports POST and GET calls and doesn't returns the response headers.\r\n  if (window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\r\n    request = new window.XDomainRequest();\r\n  }\r\n\r\n  // HTTP basic authentication\r\n  if (config.auth) {\r\n    var username = config.auth.username || '';\r\n    var password = config.auth.password || '';\r\n    requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n  }\r\n\r\n  request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\r\n\r\n  // Set the request timeout in MS\r\n  request.timeout = config.timeout;\r\n\r\n  // Listen for ready state\r\n  request.onload = function handleLoad() {\r\n    if (!request) {\r\n      return;\r\n    }\r\n    // Prepare the response\r\n    var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n    var responseData = ['text', ''].indexOf(config.responseType || '') !== -1 ? request.responseText : request.response;\r\n    var response = {\r\n      data: transformData(\r\n        responseData,\r\n        responseHeaders,\r\n        config.transformResponse\r\n      ),\r\n      // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\r\n      status: request.status === 1223 ? 204 : request.status,\r\n      statusText: request.status === 1223 ? 'No Content' : request.statusText,\r\n      headers: responseHeaders,\r\n      config: config,\r\n      request: request\r\n    };\r\n\r\n    // Resolve or reject the Promise based on the status\r\n    ((response.status >= 200 && response.status < 300) ||\r\n     (!('status' in request) && response.responseText) ?\r\n      resolve :\r\n      reject)(response);\r\n\r\n    // Clean up request\r\n    request = null;\r\n  };\r\n\r\n  // Handle low level network errors\r\n  request.onerror = function handleError() {\r\n    // Real errors are hidden from us by the browser\r\n    // onerror should only fire if it's a network error\r\n    reject(new Error('Network Error'));\r\n\r\n    // Clean up request\r\n    request = null;\r\n  };\r\n\r\n  // Add xsrf header\r\n  // This is only done if running in a standard browser environment.\r\n  // Specifically not if we're in a web worker, or react-native.\r\n  if (utils.isStandardBrowserEnv()) {\r\n    var cookies = require('./../helpers/cookies');\r\n\r\n    // Add xsrf header\r\n    var xsrfValue = config.withCredentials || isURLSameOrigin(config.url) ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n    if (xsrfValue) {\r\n      requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n    }\r\n  }\r\n\r\n  // Add headers to the request\r\n  if ('setRequestHeader' in request) {\r\n    utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n      if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n        // Remove Content-Type if data is undefined\r\n        delete requestHeaders[key];\r\n      } else {\r\n        // Otherwise add header to the request\r\n        request.setRequestHeader(key, val);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Add withCredentials to request if needed\r\n  if (config.withCredentials) {\r\n    request.withCredentials = true;\r\n  }\r\n\r\n  // Add responseType to request if needed\r\n  if (config.responseType) {\r\n    try {\r\n      request.responseType = config.responseType;\r\n    } catch (e) {\r\n      if (request.responseType !== 'json') {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (utils.isArrayBuffer(requestData)) {\r\n    requestData = new DataView(requestData);\r\n  }\r\n\r\n  // Send the request\r\n  request.send(requestData);\r\n};\r\n","'use strict';\r\n\r\nvar defaults = require('./defaults');\r\nvar utils = require('./utils');\r\nvar dispatchRequest = require('./core/dispatchRequest');\r\nvar InterceptorManager = require('./core/InterceptorManager');\r\nvar isAbsoluteURL = require('./helpers/isAbsoluteURL');\r\nvar combineURLs = require('./helpers/combineURLs');\r\nvar bind = require('./helpers/bind');\r\nvar transformData = require('./helpers/transformData');\r\n\r\nfunction Axios(defaultConfig) {\r\n  this.defaults = utils.merge({}, defaultConfig);\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = utils.merge({\r\n      url: arguments[0]\r\n    }, arguments[1]);\r\n  }\r\n\r\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\r\n\r\n  // Support baseURL config\r\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\r\n    config.url = combineURLs(config.baseURL, config.url);\r\n  }\r\n\r\n  // Don't allow overriding defaults.withCredentials\r\n  config.withCredentials = config.withCredentials || this.defaults.withCredentials;\r\n\r\n  // Transform request data\r\n  config.data = transformData(\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers || {}\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  // Hook up interceptors middleware\r\n  var chain = [dispatchRequest, undefined];\r\n  var promise = Promise.resolve(config);\r\n\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    chain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  while (chain.length) {\r\n    promise = promise.then(chain.shift(), chain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nvar defaultInstance = new Axios(defaults);\r\nvar axios = module.exports = bind(Axios.prototype.request, defaultInstance);\r\n\r\naxios.create = function create(defaultConfig) {\r\n  return new Axios(defaultConfig);\r\n};\r\n\r\n// Expose defaults\r\naxios.defaults = defaultInstance.defaults;\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = require('./helpers/spread');\r\n\r\n// Expose interceptors\r\naxios.interceptors = defaultInstance.interceptors;\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url\r\n    }));\r\n  };\r\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n  axios[method] = bind(Axios.prototype[method], defaultInstance);\r\n});\r\n","'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n","'use strict';\r\n\r\n/**\r\n * Dispatch a request to the server using whichever adapter\r\n * is supported by the current environment.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  return new Promise(function executor(resolve, reject) {\r\n    try {\r\n      var adapter;\r\n\r\n      if (typeof config.adapter === 'function') {\r\n        // For custom adapter support\r\n        adapter = config.adapter;\r\n      } else if (typeof XMLHttpRequest !== 'undefined') {\r\n        // For browsers use XHR adapter\r\n        adapter = require('../adapters/xhr');\r\n      } else if (typeof process !== 'undefined') {\r\n        // For node use HTTP adapter\r\n        adapter = require('../adapters/http');\r\n      }\r\n\r\n      if (typeof adapter === 'function') {\r\n        adapter(resolve, reject, config);\r\n      }\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n};\r\n\r\n","'use strict';\r\n\r\nvar utils = require('./utils');\r\n\r\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nmodule.exports = {\r\n  transformRequest: [function transformResponseJSON(data, headers) {\r\n    if (utils.isFormData(data)) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBuffer(data)) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isObject(data) && !utils.isFile(data) && !utils.isBlob(data)) {\r\n      // Set application/json if no Content-Type has been specified\r\n      if (!utils.isUndefined(headers)) {\r\n        utils.forEach(headers, function processContentTypeHeader(val, key) {\r\n          if (key.toLowerCase() === 'content-type') {\r\n            headers['Content-Type'] = val;\r\n          }\r\n        });\r\n\r\n        if (utils.isUndefined(headers['Content-Type'])) {\r\n          headers['Content-Type'] = 'application/json;charset=utf-8';\r\n        }\r\n      }\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponseJSON(data) {\r\n    /*eslint no-param-reassign:0*/\r\n    if (typeof data === 'string') {\r\n      data = data.replace(PROTECTION_PREFIX, '');\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch (e) { /* Ignore */ }\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  headers: {\r\n    common: {\r\n      'Accept': 'application/json, text/plain, */*'\r\n    },\r\n    patch: utils.merge(DEFAULT_CONTENT_TYPE),\r\n    post: utils.merge(DEFAULT_CONTENT_TYPE),\r\n    put: utils.merge(DEFAULT_CONTENT_TYPE)\r\n  },\r\n\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN'\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n","'use strict';\r\n\r\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction InvalidCharacterError(message) {\r\n  this.message = message;\r\n}\r\nInvalidCharacterError.prototype = new Error;\r\nInvalidCharacterError.prototype.code = 5;\r\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\r\n\r\nfunction btoa(input) {\r\n  var str = String(input);\r\n  var output = '';\r\n  for (\r\n    // initialize result and counter\r\n    var block, charCode, idx = 0, map = chars;\r\n    // if the next str index does not exist:\r\n    //   change the mapping table to \"=\"\r\n    //   check if d has no fractional digits\r\n    str.charAt(idx | 0) || (map = '=', idx % 1);\r\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\r\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\r\n  ) {\r\n    charCode = str.charCodeAt(idx += 3 / 4);\r\n    if (charCode > 0xFF) {\r\n      throw new InvalidCharacterError('INVALID_CHARACTER_ERR: DOM Exception 5');\r\n    }\r\n    block = block << 8 | charCode;\r\n  }\r\n  return output;\r\n}\r\n\r\nmodule.exports = btoa;\r\n","'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%40/gi, '@').\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      }\r\n\r\n      if (!utils.isArray(val)) {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n","'use strict';\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\r\n};\r\n","'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n  (function standardBrowserEnv() {\r\n    return {\r\n      write: function write(name, value, expires, path, domain, secure) {\r\n        var cookie = [];\r\n        cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n        if (utils.isNumber(expires)) {\r\n          cookie.push('expires=' + new Date(expires).toGMTString());\r\n        }\r\n\r\n        if (utils.isString(path)) {\r\n          cookie.push('path=' + path);\r\n        }\r\n\r\n        if (utils.isString(domain)) {\r\n          cookie.push('domain=' + domain);\r\n        }\r\n\r\n        if (secure === true) {\r\n          cookie.push('secure');\r\n        }\r\n\r\n        document.cookie = cookie.join('; ');\r\n      },\r\n\r\n      read: function read(name) {\r\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n        return (match ? decodeURIComponent(match[3]) : null);\r\n      },\r\n\r\n      remove: function remove(name) {\r\n        this.write(name, '', Date.now() - 86400000);\r\n      }\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return {\r\n      write: function write() {},\r\n      read: function read() { return null; },\r\n      remove: function remove() {}\r\n    };\r\n  })()\r\n);\r\n","'use strict';\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n","'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n  (function standardBrowserEnv() {\r\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n    var urlParsingNode = document.createElement('a');\r\n    var originURL;\r\n\r\n    /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n    function resolveURL(url) {\r\n      var href = url;\r\n\r\n      if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n        urlParsingNode.setAttribute('href', href);\r\n        href = urlParsingNode.href;\r\n      }\r\n\r\n      urlParsingNode.setAttribute('href', href);\r\n\r\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n      return {\r\n        href: urlParsingNode.href,\r\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n        host: urlParsingNode.host,\r\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n        hostname: urlParsingNode.hostname,\r\n        port: urlParsingNode.port,\r\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n                  urlParsingNode.pathname :\r\n                  '/' + urlParsingNode.pathname\r\n      };\r\n    }\r\n\r\n    originURL = resolveURL(window.location.href);\r\n\r\n    /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n    return function isURLSameOrigin(requestURL) {\r\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n      return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return function isURLSameOrigin() {\r\n      return true;\r\n    };\r\n  })()\r\n);\r\n","'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n","'use strict';\r\n\r\nvar utils = require('./../utils');\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn(data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n","'use strict';\r\n\r\n/*global toString:true*/\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return toString.call(val) === '[object FormData]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  typeof document.createElement -> undefined\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined' &&\r\n    typeof document.createElement === 'function'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object' && !isArray(obj)) {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = merge(result[key], val);\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  trim: trim\r\n};\r\n","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.0.2\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","/*!\r\n * @overview  Github.js\r\n *\r\n * @copyright (c) 2013 Michael Aufreiter, Development Seed\r\n *            Github.js is freely distributable.\r\n *\r\n * @license   Licensed under BSD-3-Clause-Clear\r\n *\r\n *            For all details and documentation:\r\n *            http://substance.io/michael/github\r\n */\r\n'use strict';\r\n\r\n(function (root, factory) {\r\n   /* istanbul ignore next */\r\n   if (typeof define === 'function' && define.amd) {\r\n      define(['es6-promise', 'base-64', 'utf8', 'axios'], function (Promise, Base64, Utf8, axios) {\r\n         return (root.Github = factory(Promise, Base64, Utf8, axios));\r\n      });\r\n   } else if (typeof module === 'object' && module.exports) {\r\n      module.exports = factory(require('es6-promise'), require('base-64'), require('utf8'), require('axios'));\r\n   } else {\r\n      root.Github = factory(root.Promise, root.base64, root.utf8, root.axios);\r\n   }\r\n}(this, function(Promise, Base64, Utf8, axios) {\r\n   function b64encode(string) {\r\n      return Base64.encode(Utf8.encode(string));\r\n   }\r\n\r\n   if (Promise.polyfill) {\r\n      Promise.polyfill();\r\n   }\r\n\r\n   // Initial Setup\r\n   // -------------\r\n\r\n   var Github = function (options) {\r\n      var API_URL = options.apiUrl || 'https://api.github.com';\r\n\r\n      // HTTP Request Abstraction\r\n      // =======\r\n      //\r\n      // I'm not proud of this and neither should you be if you were responsible for the XMLHttpRequest spec.\r\n\r\n      var _request = Github._request = function _request(method, path, data, cb, raw) {\r\n         function getURL() {\r\n            var url = path.indexOf('//') >= 0 ? path : API_URL + path;\r\n\r\n            url += ((/\\?/).test(url) ? '&' : '?');\r\n\r\n            if (data && typeof data === 'object' && ['GET', 'HEAD', 'DELETE'].indexOf(method) > -1) {\r\n               for (var param in data) {\r\n                  if (data.hasOwnProperty(param))\r\n                     url += '&' + encodeURIComponent(param) + '=' + encodeURIComponent(data[param]);\r\n               }\r\n            }\r\n\r\n            return url + (typeof window !== 'undefined' ? '&' + new Date().getTime() : '');\r\n         }\r\n\r\n         var config = {\r\n            headers: {\r\n               Accept: raw ? 'application/vnd.github.v3.raw+json' : 'application/vnd.github.v3+json',\r\n               'Content-Type': 'application/json;charset=UTF-8'\r\n            },\r\n            method: method,\r\n            data: data ? data : {},\r\n            url: getURL()\r\n         };\r\n\r\n         if ((options.token) || (options.username && options.password)) {\r\n            config.headers['Authorization'] = options.token ?\r\n            'token ' + options.token :\r\n            'Basic ' + b64encode(options.username + ':' + options.password);\r\n         }\r\n\r\n         return axios(config)\r\n            .then(function (response) {\r\n               cb(\r\n                  null,\r\n                  response.data || true,\r\n                  response.request\r\n               );\r\n            }, function (response) {\r\n               if (response.status === 304) {\r\n                  cb(\r\n                     null,\r\n                     response.data || true,\r\n                     response.request\r\n                  );\r\n               } else {\r\n                  cb({\r\n                     path: path,\r\n                     request: response.request,\r\n                     error: response.status\r\n                  });\r\n               }\r\n            });\r\n      };\r\n\r\n      var _requestAllPages = Github._requestAllPages = function _requestAllPages(path, cb) {\r\n         var results = [];\r\n\r\n         (function iterate() {\r\n            _request('GET', path, null, function (err, res, xhr) {\r\n               if (err) {\r\n                  return cb(err);\r\n               }\r\n\r\n               if (!(res instanceof Array)) {\r\n                  res = [res];\r\n               }\r\n\r\n               results.push.apply(results, res);\r\n\r\n               var links = (xhr.getResponseHeader('link') || '').split(/\\s*,\\s*/g);\r\n               var next = null;\r\n\r\n               links.forEach(function (link) {\r\n                  next = /rel=\"next\"/.test(link) ? link : next;\r\n               });\r\n\r\n               if (next) {\r\n                  next = (/<(.*)>/.exec(next) || [])[1];\r\n               }\r\n\r\n               if (!next) {\r\n                  cb(err, results);\r\n               } else {\r\n                  path = next;\r\n                  iterate();\r\n               }\r\n            });\r\n         })();\r\n      };\r\n\r\n      // User API\r\n      // =======\r\n\r\n      Github.User = function () {\r\n         this.repos = function (options, cb) {\r\n            if (arguments.length === 1 && typeof arguments[0] === 'function') {\r\n               cb = options;\r\n               options = {};\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var url = '/user/repos';\r\n            var params = [];\r\n\r\n            params.push('type=' + encodeURIComponent(options.type || 'all'));\r\n            params.push('sort=' + encodeURIComponent(options.sort || 'updated'));\r\n            params.push('per_page=' + encodeURIComponent(options.per_page || '100')); // jscs:ignore\r\n\r\n            if (options.page) {\r\n               params.push('page=' + encodeURIComponent(options.page));\r\n            }\r\n\r\n            url += '?' + params.join('&');\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // List user organizations\r\n         // -------\r\n\r\n         this.orgs = function (cb) {\r\n            _request('GET', '/user/orgs', null, cb);\r\n         };\r\n\r\n         // List authenticated user's gists\r\n         // -------\r\n\r\n         this.gists = function (cb) {\r\n            _request('GET', '/gists', null, cb);\r\n         };\r\n\r\n         // List authenticated user's unread notifications\r\n         // -------\r\n\r\n         this.notifications = function (options, cb) {\r\n            if (arguments.length === 1 && typeof arguments[0] === 'function') {\r\n               cb = options;\r\n               options = {};\r\n            }\r\n\r\n            options = options || {};\r\n            var url = '/notifications';\r\n            var params = [];\r\n\r\n            if (options.all) {\r\n               params.push('all=true');\r\n            }\r\n\r\n            if (options.participating) {\r\n               params.push('participating=true');\r\n            }\r\n\r\n            if (options.since) {\r\n               var since = options.since;\r\n\r\n               if (since.constructor === Date) {\r\n                  since = since.toISOString();\r\n               }\r\n\r\n               params.push('since=' + encodeURIComponent(since));\r\n            }\r\n\r\n            if (options.before) {\r\n               var before = options.before;\r\n\r\n               if (before.constructor === Date) {\r\n                  before = before.toISOString();\r\n               }\r\n\r\n               params.push('before=' + encodeURIComponent(before));\r\n            }\r\n\r\n            if (options.page) {\r\n               params.push('page=' + encodeURIComponent(options.page));\r\n            }\r\n\r\n            if (params.length > 0) {\r\n               url += '?' + params.join('&');\r\n            }\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // Show user information\r\n         // -------\r\n\r\n         this.show = function (username, cb) {\r\n            var command = username ? '/users/' + username : '/user';\r\n\r\n            _request('GET', command, null, cb);\r\n         };\r\n\r\n         // List user repositories\r\n         // -------\r\n\r\n         this.userRepos = function (username, cb) {\r\n            // Github does not always honor the 1000 limit so we want to iterate over the data set.\r\n            _requestAllPages('/users/' + username + '/repos?type=all&per_page=100&sort=updated', cb);\r\n         };\r\n\r\n         // List user starred repositories\r\n         // -------\r\n\r\n         this.userStarred = function (username, cb) {\r\n            // Github does not always honor the 1000 limit so we want to iterate over the data set.\r\n            _requestAllPages('/users/' + username + '/starred?type=all&per_page=100', cb);\r\n         };\r\n\r\n         // List a user's gists\r\n         // -------\r\n\r\n         this.userGists = function (username, cb) {\r\n            _request('GET', '/users/' + username + '/gists', null, cb);\r\n         };\r\n\r\n         // List organization repositories\r\n         // -------\r\n\r\n         this.orgRepos = function (orgname, cb) {\r\n            // Github does not always honor the 1000 limit so we want to iterate over the data set.\r\n            _requestAllPages('/orgs/' + orgname + '/repos?type=all&&page_num=1000&sort=updated&direction=desc', cb);\r\n         };\r\n\r\n         // Follow user\r\n         // -------\r\n\r\n         this.follow = function (username, cb) {\r\n            _request('PUT', '/user/following/' + username, null, cb);\r\n         };\r\n\r\n         // Unfollow user\r\n         // -------\r\n\r\n         this.unfollow = function (username, cb) {\r\n            _request('DELETE', '/user/following/' + username, null, cb);\r\n         };\r\n\r\n         // Create a repo\r\n         // -------\r\n         this.createRepo = function (options, cb) {\r\n            _request('POST', '/user/repos', options, cb);\r\n         };\r\n      };\r\n\r\n      // Repository API\r\n      // =======\r\n\r\n      Github.Repository = function (options) {\r\n         var repo = options.name;\r\n         var user = options.user;\r\n         var fullname = options.fullname;\r\n\r\n         var that = this;\r\n         var repoPath;\r\n\r\n         if (fullname) {\r\n            repoPath = '/repos/' + fullname;\r\n         } else {\r\n            repoPath = '/repos/' + user + '/' + repo;\r\n         }\r\n\r\n         var currentTree = {\r\n            branch: null,\r\n            sha: null\r\n         };\r\n\r\n         // Uses the cache if branch has not been changed\r\n         // -------\r\n\r\n         function updateTree(branch, cb) {\r\n            if (branch === currentTree.branch && currentTree.sha) {\r\n               return cb(null, currentTree.sha);\r\n            }\r\n\r\n            that.getRef('heads/' + branch, function (err, sha) {\r\n               currentTree.branch = branch;\r\n               currentTree.sha = sha;\r\n               cb(err, sha);\r\n            });\r\n         }\r\n\r\n         // Get a particular reference\r\n         // -------\r\n\r\n         this.getRef = function (ref, cb) {\r\n            _request('GET', repoPath + '/git/refs/' + ref, null, function (err, res, xhr) {\r\n               if (err) {\r\n                  return cb(err);\r\n               }\r\n\r\n               cb(null, res.object.sha, xhr);\r\n            });\r\n         };\r\n\r\n         // Create a new reference\r\n         // --------\r\n         //\r\n         // {\r\n         //   \"ref\": \"refs/heads/my-new-branch-name\",\r\n         //   \"sha\": \"827efc6d56897b048c772eb4087f854f46256132\"\r\n         // }\r\n\r\n         this.createRef = function (options, cb) {\r\n            _request('POST', repoPath + '/git/refs', options, cb);\r\n         };\r\n\r\n         // Delete a reference\r\n         // --------\r\n         //\r\n         // Repo.deleteRef('heads/gh-pages')\r\n         // repo.deleteRef('tags/v1.0')\r\n\r\n         this.deleteRef = function (ref, cb) {\r\n            _request('DELETE', repoPath + '/git/refs/' + ref, options, cb);\r\n         };\r\n\r\n         // Create a repo\r\n         // -------\r\n\r\n         this.createRepo = function (options, cb) {\r\n            _request('POST', '/user/repos', options, cb);\r\n         };\r\n\r\n         // Delete a repo\r\n         // --------\r\n\r\n         this.deleteRepo = function (cb) {\r\n            _request('DELETE', repoPath, options, cb);\r\n         };\r\n\r\n         // List all tags of a repository\r\n         // -------\r\n\r\n         this.listTags = function (cb) {\r\n            _request('GET', repoPath + '/tags', null, cb);\r\n         };\r\n\r\n         // List all pull requests of a respository\r\n         // -------\r\n\r\n         this.listPulls = function (options, cb) {\r\n            options = options || {};\r\n            var url = repoPath + '/pulls';\r\n            var params = [];\r\n\r\n            if (typeof options === 'string') {\r\n               // Backward compatibility\r\n               params.push('state=' + options);\r\n            } else {\r\n               if (options.state) {\r\n                  params.push('state=' + encodeURIComponent(options.state));\r\n               }\r\n\r\n               if (options.head) {\r\n                  params.push('head=' + encodeURIComponent(options.head));\r\n               }\r\n\r\n               if (options.base) {\r\n                  params.push('base=' + encodeURIComponent(options.base));\r\n               }\r\n\r\n               if (options.sort) {\r\n                  params.push('sort=' + encodeURIComponent(options.sort));\r\n               }\r\n\r\n               if (options.direction) {\r\n                  params.push('direction=' + encodeURIComponent(options.direction));\r\n               }\r\n\r\n               if (options.page) {\r\n                  params.push('page=' + options.page);\r\n               }\r\n\r\n               if (options.per_page) {\r\n                  params.push('per_page=' + options.per_page);\r\n               }\r\n            }\r\n\r\n            if (params.length > 0) {\r\n               url += '?' + params.join('&');\r\n            }\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // Gets details for a specific pull request\r\n         // -------\r\n\r\n         this.getPull = function (number, cb) {\r\n            _request('GET', repoPath + '/pulls/' + number, null, cb);\r\n         };\r\n\r\n         // Retrieve the changes made between base and head\r\n         // -------\r\n\r\n         this.compare = function (base, head, cb) {\r\n            _request('GET', repoPath + '/compare/' + base + '...' + head, null, cb);\r\n         };\r\n\r\n         // List all branches of a repository\r\n         // -------\r\n\r\n         this.listBranches = function (cb) {\r\n            _request('GET', repoPath + '/git/refs/heads', null, function (err, heads, xhr) {\r\n               if (err) return cb(err);\r\n               cb(null, heads.map(function (head) {\r\n                  return head.ref.replace(/^refs\\/heads\\//, '');\r\n               }), xhr);\r\n            });\r\n         };\r\n\r\n         // Retrieve the contents of a blob\r\n         // -------\r\n\r\n         this.getBlob = function (sha, cb) {\r\n            _request('GET', repoPath + '/git/blobs/' + sha, null, cb, 'raw');\r\n         };\r\n\r\n         // For a given file path, get the corresponding sha (blob for files, tree for dirs)\r\n         // -------\r\n\r\n         this.getCommit = function (branch, sha, cb) {\r\n            _request('GET', repoPath + '/git/commits/' + sha, null, cb);\r\n         };\r\n\r\n         // For a given file path, get the corresponding sha (blob for files, tree for dirs)\r\n         // -------\r\n\r\n         this.getSha = function (branch, path, cb) {\r\n            if (!path || path === '') return that.getRef('heads/' + branch, cb);\r\n            _request('GET', repoPath + '/contents/' + path + (branch ? '?ref=' + branch : ''),\r\n               null, function (err, pathContent, xhr) {\r\n                  if (err) return cb(err);\r\n                  cb(null, pathContent.sha, xhr);\r\n               });\r\n         };\r\n\r\n         // Get the statuses for a particular SHA\r\n         // -------\r\n\r\n         this.getStatuses = function (sha, cb) {\r\n            _request('GET', repoPath + '/statuses/' + sha, null, cb);\r\n         };\r\n\r\n         // Retrieve the tree a commit points to\r\n         // -------\r\n\r\n         this.getTree = function (tree, cb) {\r\n            _request('GET', repoPath + '/git/trees/' + tree, null, function (err, res, xhr) {\r\n               if (err) return cb(err);\r\n               cb(null, res.tree, xhr);\r\n            });\r\n         };\r\n\r\n         // Post a new blob object, getting a blob SHA back\r\n         // -------\r\n\r\n         this.postBlob = function (content, cb) {\r\n            if (typeof (content) === 'string') {\r\n               content = {\r\n                  content: content,\r\n                  encoding: 'utf-8'\r\n               };\r\n            } else {\r\n               content = {\r\n                  content: b64encode(content),\r\n                  encoding: 'base64'\r\n               };\r\n            }\r\n\r\n            _request('POST', repoPath + '/git/blobs', content, function (err, res) {\r\n               if (err) return cb(err);\r\n               cb(null, res.sha);\r\n            });\r\n         };\r\n\r\n         // Update an existing tree adding a new blob object getting a tree SHA back\r\n         // -------\r\n\r\n         this.updateTree = function (baseTree, path, blob, cb) {\r\n            var data = {\r\n               base_tree: baseTree,\r\n               tree: [\r\n                  {\r\n                     path: path,\r\n                     mode: '100644',\r\n                     type: 'blob',\r\n                     sha: blob\r\n                  }\r\n               ]\r\n            };\r\n\r\n            _request('POST', repoPath + '/git/trees', data, function (err, res) {\r\n               if (err) return cb(err);\r\n               cb(null, res.sha);\r\n            });\r\n         };\r\n\r\n         // Post a new tree object having a file path pointer replaced\r\n         // with a new blob SHA getting a tree SHA back\r\n         // -------\r\n\r\n         this.postTree = function (tree, cb) {\r\n            _request('POST', repoPath + '/git/trees', {\r\n               tree: tree\r\n            }, function (err, res) {\r\n               if (err) return cb(err);\r\n               cb(null, res.sha);\r\n            });\r\n         };\r\n\r\n         // Create a new commit object with the current commit SHA as the parent\r\n         // and the new tree SHA, getting a commit SHA back\r\n         // -------\r\n\r\n         this.commit = function (parent, tree, message, cb) {\r\n            var user = new Github.User();\r\n\r\n            user.show(null, function (err, userData) {\r\n               if (err) return cb(err);\r\n               var data = {\r\n                  message: message,\r\n                  author: {\r\n                     name: options.user,\r\n                     email: userData.email\r\n                  },\r\n                  parents: [\r\n                     parent\r\n                  ],\r\n                  tree: tree\r\n               };\r\n\r\n               _request('POST', repoPath + '/git/commits', data, function (err, res) {\r\n                  if (err) return cb(err);\r\n                  currentTree.sha = res.sha; // Update latest commit\r\n                  cb(null, res.sha);\r\n               });\r\n            });\r\n         };\r\n\r\n         // Update the reference of your head to point to the new commit SHA\r\n         // -------\r\n\r\n         this.updateHead = function (head, commit, cb) {\r\n            _request('PATCH', repoPath + '/git/refs/heads/' + head, {\r\n               sha: commit\r\n            }, cb);\r\n         };\r\n\r\n         // Show repository information\r\n         // -------\r\n\r\n         this.show = function (cb) {\r\n            _request('GET', repoPath, null, cb);\r\n         };\r\n\r\n         // Show repository contributors\r\n         // -------\r\n\r\n         this.contributors = function (cb, retry) {\r\n            retry = retry || 1000;\r\n            var that = this;\r\n\r\n            _request('GET', repoPath + '/stats/contributors', null, function (err, data, xhr) {\r\n               if (err) return cb(err);\r\n\r\n               if (xhr.status === 202) {\r\n                  setTimeout(\r\n                     function () {\r\n                        that.contributors(cb, retry);\r\n                     },\r\n                     retry\r\n                  );\r\n               } else {\r\n                  cb(err, data, xhr);\r\n               }\r\n            });\r\n         };\r\n\r\n         // Get contents\r\n         // --------\r\n\r\n         this.contents = function (ref, path, cb) {\r\n            path = encodeURI(path);\r\n            _request('GET', repoPath + '/contents' + (path ? '/' + path : ''), {\r\n               ref: ref\r\n            }, cb);\r\n         };\r\n\r\n         // Fork repository\r\n         // -------\r\n\r\n         this.fork = function (cb) {\r\n            _request('POST', repoPath + '/forks', null, cb);\r\n         };\r\n\r\n         // List forks\r\n         // --------\r\n\r\n         this.listForks = function (cb) {\r\n            _request('GET', repoPath + '/forks', null, cb);\r\n         };\r\n\r\n         // Branch repository\r\n         // --------\r\n\r\n         this.branch = function (oldBranch, newBranch, cb) {\r\n            if (arguments.length === 2 && typeof arguments[1] === 'function') {\r\n               cb = newBranch;\r\n               newBranch = oldBranch;\r\n               oldBranch = 'master';\r\n            }\r\n\r\n            this.getRef('heads/' + oldBranch, function (err, ref) {\r\n               if (err && cb) return cb(err);\r\n               that.createRef({\r\n                  ref: 'refs/heads/' + newBranch,\r\n                  sha: ref\r\n               }, cb);\r\n            });\r\n         };\r\n\r\n         // Create pull request\r\n         // --------\r\n\r\n         this.createPullRequest = function (options, cb) {\r\n            _request('POST', repoPath + '/pulls', options, cb);\r\n         };\r\n\r\n         // List hooks\r\n         // --------\r\n\r\n         this.listHooks = function (cb) {\r\n            _request('GET', repoPath + '/hooks', null, cb);\r\n         };\r\n\r\n         // Get a hook\r\n         // --------\r\n\r\n         this.getHook = function (id, cb) {\r\n            _request('GET', repoPath + '/hooks/' + id, null, cb);\r\n         };\r\n\r\n         // Create a hook\r\n         // --------\r\n\r\n         this.createHook = function (options, cb) {\r\n            _request('POST', repoPath + '/hooks', options, cb);\r\n         };\r\n\r\n         // Edit a hook\r\n         // --------\r\n\r\n         this.editHook = function (id, options, cb) {\r\n            _request('PATCH', repoPath + '/hooks/' + id, options, cb);\r\n         };\r\n\r\n         // Delete a hook\r\n         // --------\r\n\r\n         this.deleteHook = function (id, cb) {\r\n            _request('DELETE', repoPath + '/hooks/' + id, null, cb);\r\n         };\r\n\r\n         // Read file at given path\r\n         // -------\r\n\r\n         this.read = function (branch, path, cb) {\r\n            _request('GET', repoPath + '/contents/' + encodeURI(path) + (branch ? '?ref=' + branch : ''),\r\n               null, function (err, obj, xhr) {\r\n                  if (err && err.error === 404) return cb('not found', null, null);\r\n\r\n                  if (err) return cb(err);\r\n                  cb(null, obj, xhr);\r\n               }, true);\r\n         };\r\n\r\n         // Remove a file\r\n         // -------\r\n\r\n         this.remove = function (branch, path, cb) {\r\n            that.getSha(branch, path, function (err, sha) {\r\n               if (err) return cb(err);\r\n               _request('DELETE', repoPath + '/contents/' + path, {\r\n                  message: path + ' is removed',\r\n                  sha: sha,\r\n                  branch: branch\r\n               }, cb);\r\n            });\r\n         };\r\n\r\n         // Alias for repo.remove for backwards comapt.\r\n         // -------\r\n         this.delete = this.remove;\r\n\r\n         // Move a file to a new location\r\n         // -------\r\n\r\n         this.move = function (branch, path, newPath, cb) {\r\n            updateTree(branch, function (err, latestCommit) {\r\n               that.getTree(latestCommit + '?recursive=true', function (err, tree) {\r\n                  // Update Tree\r\n                  tree.forEach(function (ref) {\r\n                     if (ref.path === path) ref.path = newPath;\r\n\r\n                     if (ref.type === 'tree') delete ref.sha;\r\n                  });\r\n\r\n                  that.postTree(tree, function (err, rootTree) {\r\n                     that.commit(latestCommit, rootTree, 'Deleted ' + path, function (err, commit) {\r\n                        that.updateHead(branch, commit, cb);\r\n                     });\r\n                  });\r\n               });\r\n            });\r\n         };\r\n\r\n         // Write file contents to a given branch and path\r\n         // -------\r\n\r\n         this.write = function (branch, path, content, message, options, cb) {\r\n            if (typeof cb === 'undefined') {\r\n               cb = options;\r\n               options = {};\r\n            }\r\n\r\n            that.getSha(branch, encodeURI(path), function (err, sha) {\r\n               var writeOptions = {\r\n                  message: message,\r\n                  content: typeof options.encode === 'undefined' || options.encode ? b64encode(content) : content,\r\n                  branch: branch,\r\n                  committer: options && options.committer ? options.committer : undefined,\r\n                  author: options && options.author ? options.author : undefined\r\n               };\r\n\r\n               // If no error, we set the sha to overwrite an existing file\r\n               if (!(err && err.error !== 404)) writeOptions.sha = sha;\r\n               _request('PUT', repoPath + '/contents/' + encodeURI(path), writeOptions, cb);\r\n            });\r\n         };\r\n\r\n         // List commits on a repository. Takes an object of optional parameters:\r\n         // sha: SHA or branch to start listing commits from\r\n         // path: Only commits containing this file path will be returned\r\n         // author: Only commits by this author will be returned. Its value can be the GitHub login or the email address\r\n         // since: ISO 8601 date - only commits after this date will be returned\r\n         // until: ISO 8601 date - only commits before this date will be returned\r\n         // -------\r\n\r\n         this.getCommits = function (options, cb) {\r\n            options = options || {};\r\n            var url = repoPath + '/commits';\r\n            var params = [];\r\n\r\n            if (options.sha) {\r\n               params.push('sha=' + encodeURIComponent(options.sha));\r\n            }\r\n\r\n            if (options.path) {\r\n               params.push('path=' + encodeURIComponent(options.path));\r\n            }\r\n\r\n            if (options.author) {\r\n               params.push('author=' + encodeURIComponent(options.author));\r\n            }\r\n\r\n            if (options.since) {\r\n               var since = options.since;\r\n\r\n               if (since.constructor === Date) {\r\n                  since = since.toISOString();\r\n               }\r\n\r\n               params.push('since=' + encodeURIComponent(since));\r\n            }\r\n\r\n            if (options.until) {\r\n               var until = options.until;\r\n\r\n               if (until.constructor === Date) {\r\n                  until = until.toISOString();\r\n               }\r\n\r\n               params.push('until=' + encodeURIComponent(until));\r\n            }\r\n\r\n            if (options.page) {\r\n               params.push('page=' + options.page);\r\n            }\r\n\r\n            if (options.perpage) {\r\n               params.push('per_page=' + options.perpage);\r\n            }\r\n\r\n            if (params.length > 0) {\r\n               url += '?' + params.join('&');\r\n            }\r\n\r\n            _request('GET', url, null, cb);\r\n         };\r\n\r\n         // Check if a repository is starred.\r\n         // --------\r\n\r\n         this.isStarred = function(owner, repository, cb) {\r\n            _request('GET', '/user/starred/' + owner + '/' + repository, null, cb);\r\n         };\r\n\r\n         // Star a repository.\r\n         // --------\r\n\r\n         this.star = function(owner, repository, cb) {\r\n            _request('PUT', '/user/starred/' + owner + '/' + repository, null, cb)\r\n         };\r\n\r\n         // Unstar a repository.\r\n         // --------\r\n\r\n         this.unstar = function(owner, repository, cb) {\r\n            _request('DELETE', '/user/starred/' + owner + '/' + repository, null, cb)\r\n         };\r\n      };\r\n\r\n      // Gists API\r\n      // =======\r\n\r\n      Github.Gist = function (options) {\r\n         var id = options.id;\r\n         var gistPath = '/gists/' + id;\r\n\r\n         // Read the gist\r\n         // --------\r\n\r\n         this.read = function (cb) {\r\n            _request('GET', gistPath, null, cb);\r\n         };\r\n\r\n         // Create the gist\r\n         // --------\r\n         // {\r\n         //  \"description\": \"the description for this gist\",\r\n         //    \"public\": true,\r\n         //    \"files\": {\r\n         //      \"file1.txt\": {\r\n         //        \"content\": \"String file contents\"\r\n         //      }\r\n         //    }\r\n         // }\r\n\r\n         this.create = function (options, cb) {\r\n            _request('POST', '/gists', options, cb);\r\n         };\r\n\r\n         // Delete the gist\r\n         // --------\r\n\r\n         this.delete = function (cb) {\r\n            _request('DELETE', gistPath, null, cb);\r\n         };\r\n\r\n         // Fork a gist\r\n         // --------\r\n\r\n         this.fork = function (cb) {\r\n            _request('POST', gistPath + '/fork', null, cb);\r\n         };\r\n\r\n         // Update a gist with the new stuff\r\n         // --------\r\n\r\n         this.update = function (options, cb) {\r\n            _request('PATCH', gistPath, options, cb);\r\n         };\r\n\r\n         // Star a gist\r\n         // --------\r\n\r\n         this.star = function (cb) {\r\n            _request('PUT', gistPath + '/star', null, cb);\r\n         };\r\n\r\n         // Untar a gist\r\n         // --------\r\n\r\n         this.unstar = function (cb) {\r\n            _request('DELETE', gistPath + '/star', null, cb);\r\n         };\r\n\r\n         // Check if a gist is starred\r\n         // --------\r\n\r\n         this.isStarred = function (cb) {\r\n            _request('GET', gistPath + '/star', null, cb);\r\n         };\r\n      };\r\n\r\n      // Issues API\r\n      // ==========\r\n\r\n      Github.Issue = function (options) {\r\n         var path = '/repos/' + options.user + '/' + options.repo + '/issues';\r\n\r\n         this.list = function (options, cb) {\r\n            var query = [];\r\n\r\n            for (var key in options) {\r\n               if (options.hasOwnProperty(key)) {\r\n                  query.push(encodeURIComponent(key) + '=' + encodeURIComponent(options[key]));\r\n               }\r\n            }\r\n\r\n            _requestAllPages(path + '?' + query.join('&'), cb);\r\n         };\r\n\r\n         this.comment = function (issue, comment, cb) {\r\n            _request('POST', issue.comments_url, {\r\n               body: comment\r\n            }, cb);\r\n         };\r\n      };\r\n\r\n      // Search API\r\n      // ==========\r\n\r\n      Github.Search = function (options) {\r\n         var path = '/search/';\r\n         var query = '?q=' + options.query;\r\n\r\n         this.repositories = function (options, cb) {\r\n            _request('GET', path + 'repositories' + query, options, cb);\r\n         };\r\n\r\n         this.code = function (options, cb) {\r\n            _request('GET', path + 'code' + query, options, cb);\r\n         };\r\n\r\n         this.issues = function (options, cb) {\r\n            _request('GET', path + 'issues' + query, options, cb);\r\n         };\r\n\r\n         this.users = function (options, cb) {\r\n            _request('GET', path + 'users' + query, options, cb);\r\n         };\r\n      };\r\n\r\n      return Github;\r\n   };\r\n\r\n// Top Level API\r\n// -------\r\n\r\n   Github.getIssues = function (user, repo) {\r\n      return new Github.Issue({\r\n         user: user,\r\n         repo: repo\r\n      });\r\n   };\r\n\r\n   Github.getRepo = function (user, repo) {\r\n      if (!repo) {\r\n         return new Github.Repository({\r\n            fullname: user\r\n         });\r\n      } else {\r\n         return new Github.Repository({\r\n            user: user,\r\n            name: repo\r\n         });\r\n      }\r\n   };\r\n\r\n   Github.getUser = function () {\r\n      return new Github.User();\r\n   };\r\n\r\n   Github.getGist = function (id) {\r\n      return new Github.Gist({\r\n         id: id\r\n      });\r\n   };\r\n\r\n   Github.getSearch = function (query) {\r\n      return new Github.Search({\r\n         query: query\r\n      });\r\n   };\r\n\r\n   return Github;\r\n}));"],"sourceRoot":"/source/"}